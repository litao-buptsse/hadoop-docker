<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->    
<configuration>

   <property>
     <name>yarn.resourcemanager.work-preserving-recovery.enabled</name>
     <value>true</value>
     <description>Whether to enable work preserving recovery for the Resource Manager</description>
   </property>

   <!--property>
     <name>yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms</name>
     <value>5000</value>
   </property-->

   <property>
     <name>yarn.nodemanager.recovery.enabled</name>
     <value>true</value>
     <description>Whether to enable work preserving recovery for the Node Manager</description>
   </property>
   <property>
      <name>yarn.nodemanager.recovery.dir</name>
      <value>/tmp/recovery</value>
      <description>The location for stored state on the Node Manager, if work preserving recovery 
              is enabled.</description>
   </property>

     <property>
      <name>yarn.resourcemanager.state-store.max-completed-applications</name>
      <value>30000</value>
    </property>
      <property>
      <name>yarn.resourcemanager.max-completed-applications</name>
      <value>30000</value>
    </property>
    <property>
      <name>yarn.nodemanager.disk-health-checker.min-healthy-disks</name>
      <value>0.1</value>
    </property>
 
    <property>
      <name>yarn.scheduler.fair.sizebasedweight</name>
      <value>false</value>
    </property>

    <property>
      <name>yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage</name>
      <value>100</value>
    </property>
 
   <property>
      <name>yarn.app.mapreduce.am.container.log.limit.kb</name>
      <value>52400</value>
    </property>
  
    <property>
      <name>yarn.app.mapreduce.task.container.log.backups</name>
      <value>2</value>
    </property>

    <property>
      <name>yarn.app.mapreduce.am.container.log.backups</name>
      <value>2</value>
    </property>
   
    <property>
      <name>yarn.nodemanager.container-executor.class</name>
      <value>org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor</value>
      <!--value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value-->
    </property>
   <property>
     <name>yarn.nodemanager.default-container-executor.cgexec.g.param.value</name>
      <value>cpuset:yarn-nodemanager-containers</value>
   </property>    
    <property>
      <name>yarn.nodemanager.local-dirs</name>
      <value>/search/hadoop01/yarn_local,/search/hadoop02/yarn_local,/search/hadoop03/yarn_local,/search/hadoop04/yarn_local,/search/hadoop05/yarn_local,/search/hadoop06/yarn_local,/search/hadoop07/yarn_local,/search/hadoop08/yarn_local,/search/hadoop09/yarn_local,/search/hadoop10/yarn_local,/search/hadoop11/yarn_local,</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.remote-app-log-dir-suffix</name>
      <value>logs</value>
    </property>
    
    <property>
      <name>yarn.resourcemanager.scheduler.class</name>
      <!--value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value-->
      <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</value>
    </property>

    <property>
      <name>yarn.scheduler.fair.assignmultiple</name>
      <value>true</value>
    </property>

    <property>
      <name>yarn.scheduler.fair.max.assign</name>
      <value>5</value>
    </property>

    <property>
      <name>yarn.scheduler.fair.user-as-default-queue</name>
      <value>true</value>
    </property>
 
    <property>
      <name>yarn.scheduler.fair.preemption</name>
      <value>true</value>
    </property>

    <property>
      <name>yarn.scheduler.fair.continuous-scheduling-enabled</name>
      <value>true</value>
    </property> 

    <property>
      <name>yarn.scheduler.fair.continuous-scheduling-sleep-ms</name>
      <value>1000</value>
    </property> 

    <property>
      <name>yarn.nodemanager.resource.memory-mb</name>
      <value>36864</value>
    </property>

    <property>
      <name>yarn.nodemanager.resource.cpu-vcores</name>
      <value>16</value>
    </property>
    
    <property>
      <name>yarn.scheduler.minimum-allocation-mb</name>
      <value>1024</value>
    </property>

    <property>
      <name>yarn.scheduler.maximum-allocation-mb</name>
      <value>25600</value>
    </property>

    <property>
      <name>yarn.scheduler.minimum-allocation-vcores</name>
      <value>1</value>
    </property>
    
    <property>
      <name>yarn.log-aggregation.retain-seconds</name>
      <value>172800</value>
    </property>
    
    <property>
      <name>yarn.log-aggregation-enable</name>
      <value>true</value>
    </property>

    <property>
      <name>yarn.nodemanager.address</name>
      <value>0.0.0.0:6454</value>
    </property>
    
    <property>
      <description>Frequency of running node health script.</description>
      <name>yarn.nodemanager.health-checker.interval-ms</name>
      <value>300000</value>
    </property>

  <property>
    <description>Script time out period.</description>
    <name>yarn.nodemanager.health-checker.script.timeout-ms</name>
    <value>60000</value>
  </property>

  <property>
    <description>The health check script to run.</description>
    <name>yarn.nodemanager.health-checker.script.path</name>
    <value>/var/log/hadoop-yarn/healthcheck.sh</value>
  </property>

  <property>
    <description>The arguments to pass to the health check script.</description>
    <name>yarn.nodemanager.health-checker.script.opts</name>
    <value>*</value>
  </property>   
 
    <property>
      <name>yarn.nodemanager.container-monitor.interval-ms</name>
      <value>1000</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.log.retain-seconds</name>
      <value>604800</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.delete.debug-delay-sec</name>
      <value>3600</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.log-aggregation.compression-type</name>
      <value>gz</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.log-dirs</name>
      <value>/search/odin/yarn_log</value>
    </property>
    
    <property>
      <name>yarn.resourcemanager.am.max-attempts</name>
      <value>10</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.remote-app-log-dir</name>
      <value>/app-logs</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.admin-env</name>
      <value>MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.aux-services</name>
      <value>mapreduce_shuffle</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.vmem-check-enabled</name>
      <value>false</value>
    </property>
 
    <property>
      <name>yarn.nodemanager.log-aggregation.debug-enabled</name>
      <value>true</value>
    </property>
    
    <property>
      <name>yarn.acl.enable</name>
      <value>false</value>
    </property>
    
    <property>
      <name>yarn.admin.acl</name>
      <value>*</value>
    </property>
    
    <!--property>
      <name>yarn.resourcemanager.webapp.address</name>
      <value>${local.resourcemanager}:8088</value>
    </property-->
    
    <property>
      <name>yarn.resourcemanager.nodes.exclude-path</name>
      <value>/etc/hadoop/conf/exclude_hosts</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.linux-container-executor.group</name>
      <value>hadoop</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.vmem-pmem-ratio</name>
      <value>2.1</value>
    </property>
    
    <property>
      <name>yarn.log.server.url</name>
      <value>http://${local.jobhistory}:19888/jobhistory/logs</value>
    </property>
    
    <property>
      <name>yarn.application.classpath</name>
      <value>/etc/hadoop/conf,/usr/lib/hadoop/*,/usr/lib/hadoop/lib/*,/usr/lib/hadoop-hdfs/*,/usr/lib/hadoop-hdfs/lib/*,/usr/lib/hadoop-yarn/*,/usr/lib/hadoop-yarn/lib/*,/usr/lib/hadoop-mapreduce/*,/usr/lib/hadoop-mapreduce/lib/*,/usr/lib/hbase/*,/etc/hbase/conf,/usr/lib/hbase/lib/*</value>
    </property>
    
    <property>
      <name>yarn.nodemanager.aux-services.mapreduce_shuffle.class</name>
      <value>org.apache.hadoop.mapred.ShuffleHandler</value>
    </property>
    
    <property>
      <name>hadoop.client.ugi</name>
      <value>yarn,yarnpassword184</value>
    </property>

    <!--property>
     <name>yarn.app.mapreduce.am.staging-dir</name>
     <value>/user</value>
   </property-->

   <!--resource manager ha config-->
   <property>
     <name>yarn.resourcemanager.connect.retry-interval.ms</name>
     <value>1000</value>
   </property>

   <property>
     <name>yarn.resourcemanager.zk-timeout-ms</name>
     <value>90000</value>
   </property>

   <property>
     <name>yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size</name>
     <value>50</value>
   </property>

   <property>
     <name>yarn.resourcemanager.cluster-id</name>
     <!--value>SunshineRM</value-->
     <value>SunshineRM</value>
   </property>

   <property>
     <name>yarn.resourcemanager.ha.enabled</name>
     <value>true</value>
   </property>


   <property>
     <name>yarn.resourcemanager.ha.automatic-failover.enabled</name>
     <value>true</value>
   </property>
   <property>
     <name>yarn.resourcemanager.ha.automatic-failover.embedded</name>
     <value>true</value>
   </property>
   <property>
     <name>yarn.resourcemanager.ha.rm-ids</name>
     <value>rm1,rm2</value>
   </property>
   <property>
     <name>yarn.resourcemanager.ha.id</name>
     <value>rm1</value>
   </property>

  <!-- RM1 configs -->
  <property>
    <name>yarn.resourcemanager.hostname.rm1</name>
    <value>${local.resourcemanager}</value>
  </property>
  <property>
    <name>yarn.resourcemanager.address.rm1</name>
    <value>${local.resourcemanager}:23140</value>
  </property>
  <property>
    <name>yarn.resourcemanager.scheduler.address.rm1</name>
    <value>${local.resourcemanager}:23130</value>
  </property>
  <property>
    <name>yarn.resourcemanager.webapp.https.address.rm1</name>
    <value>${local.resourcemanager}:23189</value>
  </property>
  <property>
    <name>yarn.resourcemanager.webapp.address.rm1</name>
    <value>${local.resourcemanager}:23188</value>
  </property>
  <property>
    <name>yarn.resourcemanager.resource-tracker.address.rm1</name>
    <value>${local.resourcemanager}:23125</value>
  </property>
  <property>
    <name>yarn.resourcemanager.admin.address.rm1</name>
    <value>${local.resourcemanager}:23141</value>
  </property>

  <!-- RM2 configs -->
  <property>
    <name>yarn.resourcemanager.hostname.rm2</name>
    <value>${local.resourcemanager2}</value>
  </property>
  <property>
    <name>yarn.resourcemanager.address.rm2</name>
    <value>${local.resourcemanager2}:23140</value>
  </property>
  <property>
    <name>yarn.resourcemanager.scheduler.address.rm2</name>
    <value>${local.resourcemanager2}:23130</value>
  </property>
  <property>
    <name>yarn.resourcemanager.webapp.https.address.rm2</name>
    <value>${local.resourcemanager2}:23189</value>
  </property>
  <property>
    <name>yarn.resourcemanager.webapp.address.rm2</name>
    <value>${local.resourcemanager2}:23188</value>
  </property>
  <property>
    <name>yarn.resourcemanager.resource-tracker.address.rm2</name>
    <value>${local.resourcemanager2}:23125</value>
  </property>
  <property>
    <name>yarn.resourcemanager.admin.address.rm2</name>
    <value>${local.resourcemanager2}:23141</value>
  </property>



  <property>
    <!--name>yarn.resourcemanager.zk.state-store.address</name-->
    <name>yarn.resourcemanager.zk-address</name>
    <value>${ha.zookeeper.quorum}</value>
  </property>
  <property>
    <name>yarn.resourcemanager.recovery.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.resourcemanager.store.class</name>
    <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
  </property>

  <property>
    <name>yarn.resourcemanager.zk-state-store.parent-path</name>
    <value>/sunshine</value>
  </property>

<!-- Node Manager Configs -->
  <property>
    <description>Address where the localizer IPC is.</description>
    <name>yarn.nodemanager.localizer.address</name>
    <value>0.0.0.0:6344</value>
  </property>
  <property>
    <description>NM Webapp address.</description>
    <name>yarn.nodemanager.webapp.address</name>
    <value>0.0.0.0:6999</value>
  </property>
  <property>
    <name>mapreduce.shuffle.port</name>
    <value>23080</value>
  </property>
  <property>
    <name>yarn.nodemanager.label</name>
    <value>RHL6</value>
  </property> 

  <property>
    <name>yarn.resourcemanager.system-metrics-publisher.enabled</name>
   <value>true</value>
  </property>

 <!-- timeline config -->  
  <property>
    <description>The hostname of the Timeline service web application.</description>
    <name>yarn.timeline-service.hostname</name>
    <value>${local.resourcemanager2}</value>
  </property>

  <property>
    <name>yarn.timeline-service.ttl-ms</name>
    <value> 259200000</value>
  </property>

  <property>
    <name>yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms</name>
    <value> 300000 </value>
  </property>

  <property>
    <name>yarn.timeline-service.store-class</name>
    <value>org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore</value>
  </property>

  <property>
    <name>yarn.timeline-service.ttl-enable</name>
    <value>true</value>
  </property>

  <property>
    <name>yarn.timeline-service.leveldb-timeline-store.path</name>
    <value>/search/ssd_data1/hadoop-yarn/timeline</value>
  </property>

  <property>
    <name>yarn.timeline-service.http-cross-origin.enabled</name>
    <value>true</value>
  </property>

  <property>
    <name>yarn.timeline-service.webapp.address</name>
    <value>${local.resourcemanager2}:48188</value>
  </property>

  <property>
    <description>Handler thread count to serve the client RPC requests.</description>
    <name>yarn.timeline-service.handler-thread-count</name>
    <value>10</value>
  </property>

  <property>
    <description>Comma separated list of origins that are allowed for web
	services needing cross-origin (CORS) support. Wildcards (*) and patterns
        allowed</description>
    <name>yarn.timeline-service.http-cross-origin.allowed-origins</name>
    <value>*</value>
  </property>

  <property>
    <description>Comma separated list of methods that are allowed for web
	services needing cross-origin (CORS) support.</description>
    <name>yarn.timeline-service.http-cross-origin.allowed-methods</name>
    <value>GET,POST,HEAD</value>
  </property>

  <property>
    <description>Comma separated list of headers that are allowed for web
	services needing cross-origin (CORS) support.</description>
    <name>yarn.timeline-service.http-cross-origin.allowed-headers</name>
    <value>X-Requested-With,Content-Type,Accept,Origin</value>
  </property>

  <property>
    <description>The number of seconds a pre-flighted request can be cached
	for web services needing cross-origin (CORS) support.</description>
    <name>yarn.timeline-service.http-cross-origin.max-age</name>
    <value>1800</value>
  </property>

  <property>
    <description>Indicate to ResourceManager as well as clients whether
	history-service is enabled or not. If enabled, ResourceManager starts
	recording historical data that Timelien service can consume. Similarly,
	clients can redirect to the history service when applications
	finish if this is enabled.</description>
    <name>yarn.timeline-service.generic-application-history.enabled</name>
    <value>true</value>
  </property>

  <property>
    <description>Store class name for history store, defaulting to file system
	store</description>
    <name>yarn.timeline-service.generic-application-history.store-class</name>
    <value>org.apache.hadoop.yarn.server.applicationhistoryservice.FileSystemApplicationHistoryStore</value>
  </property>

  <property>
    <description>URI pointing to the location of the FileSystem path where the history will be persisted.</description>
    <name>yarn.timeline-service.generic-application-history.fs-history-store.uri</name>
    <value>/tmp/sunshine/done</value>
  </property>
  <property>
    <name>yarn.timeline-service.enabled</name>
    <value>true</value>
  </property>

  <property>
    <name>yarn.timeline-service.address</name>
    <value>${local.resourcemanager2}:40200</value>
  </property>

  <property>
    <name>yarn.timeline-service.webapp.https.address</name>
    <value>${local.resourcemanager2}:48190</value>
  </property>

  
</configuration>
